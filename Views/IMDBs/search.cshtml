@*@model IEnumerable<Helper.Models.IMDB>*@
@model PaginatedList<Helper.Models.IMDB3>
@{
    ViewData["Title"] = "search";
}

<p>Searched data found</p>
<p>
    <a asp-action="Create">Create New</a>
    <form asp-controller="IMDBs" asp-action="Create" method="get">
        </form>
</p>


    @*<form asp-controller="IMDBs" asp-action="search" method="get">
            <p>
                Movie Name: <input type="text" name="query">
                <input type="submit" value="search" />
            </p>
        </form>*@

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Rating)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Duration)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().ReleaseYear)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Director)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Stars)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Descreption)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Image)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Director)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stars)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descreption)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Image)

                    @*<img src="~/image/images.jpg" />*@
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.SN">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.SN">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.SN">Delete</a>

                </td>
            </tr>
        }
        </tbody>
    </table>
    @{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="search"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="search"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
